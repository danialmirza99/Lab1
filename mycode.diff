diff --git a/mycode.diff b/mycode.diff
index 9dcf8ce..e69de29 100644
--- a/mycode.diff
+++ b/mycode.diff
@@ -1,183 +0,0 @@
-diff --git a/defs.h b/defs.h
-index d58a5da..9e7e98a 100644
---- a/defs.h
-+++ b/defs.h
-@@ -121,7 +121,7 @@ int             wait(int *status); //Update the wait system call signature
- void            wakeup(void*);
- void            yield(void);
- void            hello(void); //J.H.
--int waitpid(int pid, int *status, int options) //Add a waitpid system call
-+int             waitpid(int pid, int *status, int options); //Add a waitpid system call
- 
- // swtch.S
- void            swtch(struct context**, struct context*);
-diff --git a/proc.c b/proc.c
-index e8c0bfb..eef9ac9 100644
---- a/proc.c
-+++ b/proc.c
-@@ -537,8 +537,38 @@ procdump(void)
-   }
- }
- 
--
- void
- hello(void) {
-   cprintf("\n\n Hello from your kernel space! \n\n");
- }
-+
-+int
-+waitpid(int pid, int *status, int options){
-+  struct proc *p;
-+  struct proc *curproc = myproc();
-+  int pid, options;
-+
-+  acquire(&ptable.lock);
-+  for(;;){
-+    // Scan through table looking for exited children.
-+    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){
-+      if(p->parent != curproc)
-+        continue;
-+      if(p->state == ZOMBIE){
-+        // Found one.
-+        pid = p->pid;
-+        kfree(p->kstack);
-+        p->kstack = 0;
-+        freevm(p->pgdir);
-+        p->pid = 0;
-+        p->parent = 0;
-+        p->name[0] = 0;
-+        p->killed = 0;
-+        p->state = UNUSED;
-+        release(&ptable.lock);
-+        cprintf("\n\n Waitpid Successful! \n\n");
-+        return pid;
-+        }
-+    }
-+  }
-+}
-\ No newline at end of file
-diff --git a/syscall.c b/syscall.c
-index 1e5198e..e8a3523 100644
---- a/syscall.c
-+++ b/syscall.c
-@@ -104,6 +104,7 @@ extern int sys_wait(void);
- extern int sys_write(void);
- extern int sys_uptime(void);
- extern int sys_hello(void);
-+extern int sys_waitpid(void);
- 
- static int (*syscalls[])(void) = {
- [SYS_fork]    sys_fork,
-@@ -128,6 +129,7 @@ static int (*syscalls[])(void) = {
- [SYS_mkdir]   sys_mkdir,
- [SYS_close]   sys_close,
- [SYS_hello]   sys_hello,
-+[SYS_waitpid]   sys_waitpid,
- };
- 
- void
-diff --git a/syscall.h b/syscall.h
-index a074573..377e990 100644
---- a/syscall.h
-+++ b/syscall.h
-@@ -1,23 +1,24 @@
- // System call numbers
--#define SYS_fork    1
--#define SYS_exit    2
--#define SYS_wait    3
--#define SYS_pipe    4
--#define SYS_read    5
--#define SYS_kill    6
--#define SYS_exec    7
--#define SYS_fstat   8
--#define SYS_chdir   9
--#define SYS_dup    10
--#define SYS_getpid 11
--#define SYS_sbrk   12
--#define SYS_sleep  13
--#define SYS_uptime 14
--#define SYS_open   15
--#define SYS_write  16
--#define SYS_mknod  17
--#define SYS_unlink 18
--#define SYS_link   19
--#define SYS_mkdir  20
--#define SYS_close  21
--#define SYS_hello  22 //J.H.
-+#define SYS_fork     1
-+#define SYS_exit     2
-+#define SYS_wait     3
-+#define SYS_pipe     4
-+#define SYS_read     5
-+#define SYS_kill     6
-+#define SYS_exec     7
-+#define SYS_fstat    8
-+#define SYS_chdir    9
-+#define SYS_dup     10
-+#define SYS_getpid  11
-+#define SYS_sbrk    12
-+#define SYS_sleep   13
-+#define SYS_uptime  14
-+#define SYS_open    15
-+#define SYS_write   16
-+#define SYS_mknod   17
-+#define SYS_unlink  18
-+#define SYS_link    19
-+#define SYS_mkdir   20
-+#define SYS_close   21
-+#define SYS_hello   22 //J.H.
-+#define SYS_waitpid 23
-\ No newline at end of file
-diff --git a/sysproc.c b/sysproc.c
-index 79e4775..ca216e1 100644
---- a/sysproc.c
-+++ b/sysproc.c
-@@ -99,3 +99,11 @@ sys_hello(void){
-   hello();
-   return 0;
- }
-+
-+int
-+sys_waitpid() {
-+  argint(0, &pid);
-+  argptr(0,(char **) &status, sizeof(int*));
-+  argint(0, &options);
-+  return 0;
-+}
-\ No newline at end of file
-diff --git a/test.c b/test.c
-index cf36ced..eefeb64 100644
---- a/test.c
-+++ b/test.c
-@@ -6,5 +6,6 @@ int main(int argc, char *argv[]){
-     //printf(1, "hello world\n");
-     hello(); //J.H.
-     wait(&status);
-+    //waitpid()
-     exit(1);
- }
-\ No newline at end of file
-diff --git a/user.h b/user.h
-index 168c633..8c57d3d 100644
---- a/user.h
-+++ b/user.h
-@@ -24,6 +24,7 @@ char* sbrk(int);
- int sleep(int);
- int uptime(void);
- int hello(void); //J.H.
-+int waitpid(int pid, int *status, int options); //Add a waitpid system call
- 
- int status;
- 
-diff --git a/usys.S b/usys.S
-index f591888..f752d52 100644
---- a/usys.S
-+++ b/usys.S
-@@ -29,4 +29,5 @@ SYSCALL(getpid)
- SYSCALL(sbrk)
- SYSCALL(sleep)
- SYSCALL(uptime)
--SYSCALL(hello) //J.H.
-+SYSCALL(hello)
-+SYSCALL(waitpid)
-\ No newline at end of file
